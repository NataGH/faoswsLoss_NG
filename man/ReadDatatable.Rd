% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ReadDatatable.R
\name{ReadDatatable}
\alias{ReadDatatable}
\title{Read Datatable}
\usage{
ReadDatatable(table = BoundDatatable(), columns = list(),
  includeAll = TRUE, where = NULL, readOnly = TRUE, limit = NULL,
  validationOptions)
}
\arguments{
\item{table}{character. Name of desired Datatable. By default, the one from 
the token.}

\item{columns}{either a character vector of column names or list of 
\code{\link{DtDimension}} objects, each representing a desired column, how 
to sort it and by what value to filter it. If a character vector is 
supplied, \code{includeAll} is automatically set to FALSE.}

\item{includeAll}{logical. If TRUE, include all columns in the result, 
including those not specified in \code{columns}. Otherwise, return only 
specified columns.}

\item{where}{character. WHERE clause of the for "WHERE x in y" or any other 
valid form.}

\item{readOnly}{logical. Determines whether the table should include columns 
only relevant for writing back to a table (id and timestamp) or just the 
data. Ignored when validationOptions are provided.}

\item{limit}{numeric. Used mainly for testing, limit results to a certain 
number of rows.}

\item{validationOptions}{list. Key value pairs to be passed to directives.
Providing a value to this parameter causes the validation API to be called. Possible key value pairs include:
\itemize{
\item incremental - boolean, determines whether to only return rows that haven't yet been validated.
}}
}
\value{
data.table as specified by params.
}
\description{
This function allows retrieval of a Datatable from the SWS. To get a full 
list of config data, use \code{\link{FetchDatatableConfig}}.
}
\examples{
\dontrun{
table <- "ct_tariffline_adhoc"
tariffdefault <- ReadDatatable(table, readOnly = FALSE, limit=1e3)

ntariff10K <- ReadDatatable(table, limit=1e4)

tariffwrite <- ReadDatatable(table, limit=1e4, readOnly = FALSE) 

tariffwhere <- ReadDatatable(table, where="qunit = '1'", limit=1e4)

tariffselect <- ReadDatatable(table, columns=c("rep", "tyear", "hsrep"), limit=1e3)

cols <- list(DtDimension(id="rep", ascending=TRUE),
             DtDimension(id="tyear"),
             DtDimension(id="hsrep", value="H4"))

tariffcselect <- ReadDatatable(table, columns=cols, includeAll = FALSE, limit = 1e3)

#Get unvalidated rows:
ReadDatatable("world_bank_climate_data_test", limit=1e3, validationOptions = list(incremental = TRUE))
}
  
}
\author{
Sebastian Campbell and Carlo Cancellieri
}

