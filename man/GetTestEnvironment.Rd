% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetTestEnvironment.R
\name{GetTestEnvironment}
\alias{GetTestEnvironment}
\title{Get Test Environment}
\usage{
GetTestEnvironment(baseUrl, token)
}
\arguments{
\item{baseUrl}{The url for the SWS server:
\itemize{
  \item QA: \code{https://hqlqasws1.hq.un.fao.org:8181/sws}
  \item Production: \code{https://hqlprswsas1.hq.un.fao.org:8181/sws}
}}

\item{token}{A token which tells the SWS system what dataset to access. This
  token can be obtained from the system by

\itemize{
    \item Opening a session with the relevant data.
    \item Clicking "R Plugins"
    \item Selecting the relevant script to analyze.
    \item Clicking "New debug session".
}

If the module does not currently exist on the system, you will need to
upload a zipped file with an xml file specifying the dataset configurations.}
}
\value{
This function silently assigns a number of objects into the global environment

\itemize{
\item \code{swsContext.baseRestUrl} - The base URL for the server you have 
accessed
\item \code{swsContext.computationParams} - The list of parameters provided 
to your script when the debug token was created. These will all be 
characters
\item \code{swsContext.datasets} - A list of DatasetKeys. You'll only be 
interested in the first element, i.e. \code{swsContext.datasets[[1]]}
\item \code{swsContext.executionId} - A unique id connected with the token
\item \code{swsContext.token} - The token itself
\item \code{swsContext.userEmail} - The email address of the user who 
created the token
\item \code{swsContext.userId} - The id in the SWS of the user who created 
the token
\item \code{swsContext.username} - The username of the user who created the 
token
}
}
\description{
Get Test Environment
}
\section{Credentials on Windows and Linux}{


In order to work the the SWS, credentials (certificates, keys, etc.) must be
downloaded from Sharepoint 
(\url{https://workspace.fao.org/tc/sws/userspace}). In this project it can 
be found under 'Shared Documents/R Development'. Copy the contents of the 
credentials for the server you wish to access into ~/.R on your local 
machine. If you wish to place them somewhere else or you wish to access 
different servers at different times, use \code{\link{SetClientFiles}} in
your script to nominate a folder. The certificate should appear with a red
flag (untrusted), change the certificate to be always trusted. To test, run
the code in the example.
}

\section{Credentials on MacOS}{


R developers that connect to SWS from MacOS need to use a different set of 
credentials. This is due to different assumptions in the implementation of 
the underlying libraries for secure communication. The credentials for Mac 
users are in a single file - \code{client.p12} - which is distributed along 
with all the other credentials under a \code{macos} folder. It needs to be 
installed in the KeyChain (e.g. by double- clicking on the file). The
password is 'changeme'.
}

\examples{
\dontrun{

library(faosws) 
library(data.table) 
if (CheckDebug()) { 
  SetClientFiles("~/certificates/qa") 
  GetTestEnvironment("https://hqlqasws1.hq.un.fao.org:8181/sws", "98a2d80b-e55b-424a-af62-05890a9bcb6b") 
} 

}
  
}
