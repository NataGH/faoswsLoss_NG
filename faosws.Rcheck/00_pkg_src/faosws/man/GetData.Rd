% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/GetData.R
\name{GetData}
\alias{GetData}
\title{Get Data}
\usage{
GetData(key, flags = TRUE, normalized = TRUE, metadata = FALSE, pivoting)
}
\arguments{
\item{key}{An object of class DatasetKey.  Often, this will be one of the
list elements of swsContext.datasets (if running in a debug/local session,
create this object with GetTestEnvironment).}

\item{flags}{Logical, indicating if flags should be returned (TRUE)
otherwise not returned (FALSE).}

\item{normalized}{Logical, if true then data are returned in normalized
format, otherwise the format is denormalized.}

\item{metadata}{Logical, if true then metadata are returned otherwise not.}

\item{pivoting}{A vector, each of whose elements must be an object of type
Pivoting.  If omitted, no pivoting is performed on the dataset.  Using this
argument can allow for convenient reshaping of the data prior to pulling it
into R.  Note: if this argument is included, then all of the dimensions in
key must be included in this vector.  See ?Pivoting for a description on
creating this argument and for some examples on how to use it.}
}
\value{
A data table containing the data matching the key (may be empty).
}
\description{
This function provides an interface between an R session and the database.
Note that swsContext files must exist in your session, so you should run
GetTestEnvironment before calling this function.
}
\details{
If the denormalized value is not set then the data is normalized; if set the
data is denormalized along the axis specified.

If the pivoting vector is present, the dimensions are extracted in the
specified order and applying the requested sort direction. This affects
both normalized and denormalized extractions. For normalized extractions
only the order of the dimensions is influenced, while for denormalized
extraction the effect is more evident since the last dimension specified in
the pivoting vector gets its values developed along the column of the
generated data.table result object.
}
\examples{
\dontrun{
# swsContext files are necessary for GetData to run (token may need to be updated)
GetTestEnvironment(
   baseUrl = "https://hqlqasws1.hq.un.fao.org:8181/sws",
   token = "7823c00b-b82e-47bc-8708-1be103ac91e4"
)

# Use GetCodeList to find all countries and commodities
areaCodes = GetCodeList("agriculture", "agriculture", "geographicAreaM49")
itemCodes = GetCodeList("agriculture", "agriculture", "measuredItemCPC")

# Pull data for one country and all commodities
dim1 = Dimension(name = "geographicAreaM49", keys = "12")
dim2 = Dimension(name = "measuredElement", keys = "5510")
dim3 = Dimension(name = "measuredItemCPC", keys = itemCodes[, code])
dim4 = Dimension(name = "timePointYears", keys = as.character(2000:2013))
key = DatasetKey(domain = "agriculture", dataset = "agriculture",
                 dimensions = list(dim1, dim2, dim3, dim4))
GetData(key)

# Pull data for all countries and one commodity
dim1 = Dimension(name = "geographicAreaM49", keys = areaCodes[, code])
dim2 = Dimension(name = "measuredElement", keys = "5510")
dim3 = Dimension(name = "measuredItemCPC", keys = "0111")
dim4 = Dimension(name = "timePointYears", keys = as.character(2000:2013))
key = DatasetKey(domain = "agriculture", dataset = "agriculture",
                 dimensions = list(dim1, dim2, dim3, dim4))
GetData(key)
}
}

